{"version":3,"sources":["geodata/countries_with_migration.geojson","NavBar.js","Legend.js","CountryModal.js","MigrationTopChart.js","Map.js","App.js","index.js","YearOptions.js"],"names":["darkTheme","createTheme","palette","mode","primary","main","countryCodeToName","countryNames","reduce","acc","country","alpha3","NavBar","flyTo","year","setYear","updateActive","migrantsNumber","filteredYearData","migrationData","filter","hasOwnProperty","Math","ceil","cur","abs","migrants","getTotalMigrants","Box","sx","flexGrow","ThemeProvider","theme","AppBar","color","Toolbar","Grid","container","spacing","columns","alignItems","item","xs","Typography","variant","component","Slider","value","onChange","event","newValue","marks","min","max","size","console","log","target","Number","inputProps","step","type","toLocaleString","Autocomplete","id","width","options","autoHighlight","getOptionLabel","option","renderInput","params","TextField","label","Legend","props","right","open","Card","maxWidth","position","bottom","mb","mr","CardContent","active","name","Stack","ml","fontSize","paddingRight","chartOptions","maintainAspectRatio","responsive","scales","x","y","beginAtZero","CountryModal","chartData","countryCode","years","Object","keys","labels","datasets","data","map","find","c","backgroundColor","borderColor","borderWidth","prepareChartData","ISO_A3","Paper","elevation","top","height","bgcolor","align","ADMIN","Button","onClick","handleClose","padding","style","MigrationTopChart","title","setChartData","useState","useEffect","sortedData","sort","a","b","topTen","slice","other","entry","concat","processData","length","plugins","legend","display","datalabels","font","formatter","context","chart","dataIndex","ChartDataLabels","mapboxgl","accessToken","Map","mapContainer","useRef","setActive","YearOptions","setMap","setCountry","setOpen","React","lng","setLng","lat","setLat","zoom","setZoom","current","center","hoveredStateId","on","addSource","countries","addLayer","source","layout","paint","setPaintProperty","property","stops","e","features","setFeatureState","hover","properties","remove","ref","className","longitude","latitude","duration","essential","i","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","ArcElement","App","ReactDOM","render","StrictMode","document","getElementById","colorStops","description","module","exports"],"mappings":"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","file":"static/js/main.1444af26.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/countries_with_migration.92c58d0e.geojson\";","import React, { useRef, useEffect, useState } from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Slider from '@mui/material/Slider';\r\nimport MuiInput from '@mui/material/Input';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport countryNames from './geodata/countrynames.json';\r\nimport migrationData from './geodata/net_migration.json';\r\n\r\nconst darkTheme = createTheme({\r\n    palette: {\r\n        mode: 'dark',\r\n        primary: {\r\n          main: '#1976d2',\r\n        },\r\n      },\r\n});\r\n\r\nconst countryCodeToName = countryNames.reduce((acc, country) => {\r\n    acc[country.alpha3] = country.country;\r\n    return acc;\r\n  }, {});\r\n\r\nexport default function NavBar({ flyTo, year, setYear, updateActive }) {\r\n    const handleSliderChange = (event, newValue) => {\r\n        if (newValue > 1999 && newValue < 2022){\r\n            updateActive(newValue-2000);\r\n            setYear(newValue);\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (event) => {\r\n        console.log(event.target.value)\r\n        if (Number(event.target.value) > 1999 && Number(event.target.value) < 2022){\r\n            updateActive(Number(event.target.value) - 2000);\r\n            setYear(event.target.value === '' ? '' : Number(event.target.value));\r\n        }\r\n    };\r\n\r\n    const getTotalMigrants = (year) => {\r\n        const yearData = migrationData[year] || [];\r\n        const filteredYearData = yearData.filter(({country}) => countryCodeToName.hasOwnProperty(country));\r\n        return Math.ceil(filteredYearData.reduce((acc, cur) => acc + Math.abs(cur.migrants), 0) / 2.0); // divide by two, as we count each migrant twice, once at his destination and once \r\n    };\r\n\r\n    const migrantsNumber = getTotalMigrants(year);\r\n\r\n    return(\r\n        <Box sx={{ flexGrow: 1}}>\r\n            <ThemeProvider theme={darkTheme}>\r\n                <AppBar color=\"primary\">\r\n                    <Toolbar>\r\n                        <Grid container spacing={3} columns={32} alignItems=\"center\">\r\n                            <Grid item xs>\r\n                                <Typography variant=\"h5\" component=\"div\">\r\n                                    Migration Data Project\r\n                                </Typography>   \r\n                            </Grid>\r\n                            <Grid item xs={14}>\r\n                                <Slider\r\n                                    value={typeof year === 'number' ? year : 2021}\r\n                                    onChange={handleSliderChange}\r\n                                    marks\r\n                                    color=\"secondary\"\r\n                                    min={2000}\r\n                                    max={2021}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <MuiInput\r\n                                    value={year}\r\n                                    size=\"small\"\r\n                                    onChange={handleInputChange}\r\n                                    inputProps={{\r\n                                      step: 1,\r\n                                      min: 2000,\r\n                                      max: 2021,\r\n                                      type: 'number',\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={8}>\r\n                                <Typography variant=\"h5\" component=\"div\">\r\n                                    Migrants #: {migrantsNumber.toLocaleString()}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Autocomplete \r\n                            id=\"country-search\"\r\n                            sx={{ width: 300 }} \r\n                            options={countryNames} \r\n                            autoHighlight \r\n                            getOptionLabel={(option) => option.country}\r\n                            renderInput={(params) => <TextField {...params} label=\"Country\"/>}\r\n                            onChange = { (event, option) => flyTo(option) }\r\n                        />\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </ThemeProvider>\r\n        </Box>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport CircleIcon from '@mui/icons-material/Circle';\r\n\r\nexport default function Legend(props) {\r\n    let right = props.open ? '85%' : '2%';\r\n\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <Card sx={{ maxWidth: 250, position: 'absolute', right: 0, bottom: 0, mb: '2%', mr: right }}>\r\n                <CardContent>\r\n                    <Typography variant=\"h6\" component=\"div\">\r\n                        {props.year} {props.active.name}\r\n                    </Typography>\r\n                    <Stack spacing={0}>\r\n                        <Typography variant=\"body1\" >\r\n                            <CircleIcon ml={1} sx={{ color: '#2166ac', fontSize: 15, paddingRight: 1}} />\r\n                            250,000\r\n                        </Typography>\r\n                        <Typography variant=\"body1\">\r\n                            <CircleIcon sx={{ color: '#67a9cf', fontSize: 15, paddingRight: 1}} />\r\n                            100,000\r\n                        </Typography>\r\n                        <Typography variant=\"body1\">\r\n                            <CircleIcon sx={{ color: '#d1e5f0', fontSize: 15, paddingRight: 1}} />\r\n                            50,000\r\n                        </Typography>\r\n                        <Typography variant=\"body1\">\r\n                            <CircleIcon sx={{ color: '#f7f7f7', fontSize: 15, paddingRight: 1}} />\r\n                            0\r\n                        </Typography>\r\n                        <Typography variant=\"body1\">\r\n                            <CircleIcon sx={{ color: '#fddbc7', fontSize: 15, paddingRight: 1}} />\r\n                            -50,000\r\n                        </Typography>\r\n                        <Typography variant=\"body1\">\r\n                            <CircleIcon sx={{ color: '#ef8a62', fontSize: 15, paddingRight: 1}} />\r\n                            -100,000\r\n                        </Typography>\r\n                        <Typography variant=\"body1\">\r\n                            <CircleIcon sx={{ color: '#b2182b', fontSize: 15, paddingRight: 1}} />\r\n                            -250,000\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" >\r\n                            <CircleIcon ml={1} sx={{ color: '#000000', fontSize: 15, paddingRight: 1 }} />\r\n                            No Data\r\n                        </Typography>\r\n                    </Stack>\r\n                </CardContent>\r\n            </Card>\r\n        </Box>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\n\r\n// load and prepare data\r\nimport migrationData from './geodata/net_migration.json';\r\n\r\nfunction prepareChartData(countryCode) {\r\n    const years = Object.keys(migrationData);\r\n    const labels = years;\r\n    const data = years.map(year => {\r\n        const country = migrationData[year].find(c => c.country === countryCode);\r\n        return country ? country.migrants : 0;\r\n    });\r\n\r\n    return {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: 'Net Migration',\r\n                data,\r\n                backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n                borderColor: 'rgba(75, 192, 192, 1)',\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n}\r\n\r\nconst chartOptions = {\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    scales: {\r\n      x: {\r\n        type: 'category',\r\n      },\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n  };\r\n  \r\n\r\n\r\nexport default function CountryModal(props) {\r\n    const countryCode = props.country.ISO_A3;\r\n    const chartData = prepareChartData(countryCode);\r\n\r\n    return (\r\n        <Paper elevation={3}>\r\n            <Box sx={{ position: 'absolute', top:'10%', right:'1%', width: '20%', height: '86%', bgcolor: 'background.paper'}}>\r\n                <Typography id=\"modal-modal-title\" variant=\"h6\" align=\"center\" component=\"h2\">\r\n                    {props.country.ADMIN}\r\n                    <Button onClick={props.handleClose} > Close </Button> \r\n                </Typography>\r\n                <Box sx={{ padding: 2, width: 'calc(100% - 48px)', height: 'calc(100% - 48px)' }}>\r\n                    <div style={{ width: '100%', height: '100%' }}>\r\n                        <Bar data={chartData} options={chartOptions} />\r\n                    </div>\r\n                </Box>\r\n            </Box>\r\n        </Paper>\r\n    );\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\r\n\r\nimport migrationData from \"./geodata/net_migration.json\";\r\nimport countryNames from \"./geodata/countrynames.json\";\r\n\r\nfunction processData(migrationData, year, mode) {\r\n    const countryCodeToName = countryNames.reduce((acc, country) => {\r\n        acc[country.alpha3] = country.country;\r\n        return acc;\r\n      }, {});\r\n    const yearData = migrationData[year] || [];\r\n    const filteredYearData = yearData.filter(({country}) => countryCodeToName.hasOwnProperty(country));\r\n    const sortedData = [...filteredYearData].sort((a, b) => mode === \"source\" ? a.migrants - b.migrants : b.migrants - a.migrants);\r\n\r\n    const topTen = sortedData.slice(0, 5);\r\n    const other = sortedData.slice(5).reduce((acc, cur) => acc + cur.migrants, 0);\r\n\r\n    const labels = topTen.map((entry) => countryCodeToName[entry.country]).concat(\"Other\");\r\n    const data = topTen.map((entry) => Math.abs(entry.migrants)).concat(Math.abs(other));\r\n\r\n    return {\r\n        labels: labels,\r\n        datasets: [\r\n            {\r\n                label: mode === \"source\" ? \"Source of Migrants\" : \"Destination of Migrants\",\r\n                data: data,\r\n                backgroundColor: [\r\n                    \"#FF6384\",\r\n                    \"#36A2EB\",\r\n                    \"#FFCE56\",\r\n                    \"#4BC0C0\",\r\n                    \"#9966FF\",\r\n                    \"#7F7F7F\"\r\n                ],\r\n            },\r\n        ],\r\n    };\r\n}\r\n\r\n\r\nexport default function MigrationTopChart({ year, mode, title }) {\r\n    const [chartData, setChartData] = useState({});\r\n\r\n    const chartOptions = {\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n            },\r\n            datalabels: {\r\n                color: \"#000\",\r\n                font: {\r\n                    size: 14,\r\n                },\r\n                formatter: (value, context) => {\r\n                    return context.chart.data.labels[context.dataIndex];\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    useEffect(() => {\r\n        let data = processData(migrationData, year, mode);\r\n        setChartData(data);\r\n    }, [year, mode]);\r\n\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <h3>{title} {year}</h3>\r\n            {chartData.labels && chartData.labels.length > 0 && chartData.datasets && chartData.datasets.length > 0 && (\r\n                <Doughnut data={chartData} options={chartOptions} plugins={[ChartDataLabels]} />\r\n            )}\r\n            {(!chartData.labels || chartData.labels.length === 0) && <p>No data available for this year.</p>}\r\n        </Box>\r\n    );\r\n}\r\n","import React, { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\r\nimport countries from './geodata/countries_with_migration.geojson';\r\nimport NavBar from './NavBar';\r\nimport Legend from './Legend';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Box from '@mui/material/Box';\r\nimport CountryModal from './CountryModal';\r\nimport MigrationTopChart from './MigrationTopChart';\r\nimport './Map.css';\r\n\r\nimport { YearOptions } from './YearOptions';\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoibnNhbnRpYWdvMTgiLCJhIjoiY2xjcjN5cDRnMGJwbjNwbjJodjZzM2htZiJ9.j9PqvIjlbwoNyZsEqmFrqg';\r\n\r\nconst Map = () => {\r\n    const mapContainer = useRef(null);\r\n    const [active, setActive] = useState(YearOptions[21]);\r\n    const [map, setMap] = useState(null);\r\n    const [year, setYear] = useState(2021);\r\n    const [country, setCountry] = useState({});\r\n    const [open, setOpen] = React.useState(false);\r\n    const [lng, setLng] = useState(16);\r\n    const [lat, setLat] = useState(48);\r\n    const [zoom, setZoom] = useState(3);\r\n\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    // Initialize the map\r\n    useEffect(() => {\r\n        const map = new mapboxgl.Map({\r\n          container: mapContainer.current,\r\n          style: 'mapbox://styles/nsantiago18/clex8n530000g01mszz6zanjx',\r\n          center: [lng, lat],\r\n          zoom: zoom,\r\n        });\r\n\r\n        let hoveredStateId = null;\r\n\r\n        map.on('load', () => {  \r\n\r\n          // Add the geojson as a source\r\n          map.addSource('countries', {\r\n              'type': 'geojson',\r\n              'data': countries,\r\n              'generateId': true\r\n          });\r\n\r\n          // Add in a color fill layer from the geojson source\r\n          map.addLayer(\r\n            {\r\n              id: 'countries-fill',\r\n              type: 'fill',\r\n              source: 'countries',\r\n              layout: {},\r\n              paint: {\r\n                'fill-opacity': [\r\n                  'case',\r\n                  ['boolean', ['feature-state', 'hover'], false],\r\n                  1,\r\n                  0.8\r\n                ]\r\n              }\r\n            },\r\n            'country-label'\r\n          );\r\n\r\n          // Add in an outline layer from the geojson source\r\n          map.addLayer(\r\n            {\r\n              id: 'countries-outline',\r\n              type: 'line',\r\n              source: 'countries',\r\n              layout: {},\r\n              paint: {\r\n                'line-color': '#000',\r\n                'line-width': 0.7\r\n                }\r\n            },\r\n            'country-label'\r\n          );\r\n\r\n          map.setPaintProperty('countries-fill', 'fill-color', {\r\n            property: active.property,\r\n            stops: active.stops\r\n          })\r\n\r\n          // Hover effect to change opacity of country fill\r\n          map.on('mousemove', 'countries-fill', (e) => {\r\n            if (e.features.length > 0) {\r\n              if (hoveredStateId !== null) {\r\n                map.setFeatureState(\r\n                  { \r\n                    source: 'countries',\r\n                    id: hoveredStateId \r\n                  },\r\n                  { \r\n                    hover: false \r\n                  }\r\n                );\r\n              }\r\n              hoveredStateId = e.features[0].id;\r\n              map.setFeatureState(\r\n                { \r\n                  source: 'countries', \r\n                  id: hoveredStateId \r\n                },\r\n                { \r\n                  hover: true \r\n                }\r\n              );\r\n            }\r\n          });\r\n\r\n          map.on('mouseleave', 'countries-fill', () => {\r\n            if (hoveredStateId !== null) {\r\n              map.setFeatureState(\r\n                { \r\n                  source: 'countries', \r\n                  id: hoveredStateId \r\n                },\r\n                { \r\n                  hover: false \r\n                }\r\n              );\r\n            }\r\n            hoveredStateId = null;\r\n          });\r\n\r\n\r\n          // Country popup on click\r\n          map.on('click', 'countries-fill', (e) => {\r\n            handleOpen();\r\n            setCountry(\r\n              country => ({\r\n                ...country,\r\n                ...e.features[0].properties\r\n              })\r\n            );\r\n          });\r\n\r\n          \r\n\r\n          setMap(map);\r\n        });\r\n\r\n\r\n        return () => map.remove();\r\n    }, [active,year,country,open]);\r\n\r\n    const updateActive = (i) => {\r\n      setActive(YearOptions[i]);\r\n      console.log(active.property);\r\n      map.setPaintProperty('countries-fill', 'fill-color', {\r\n        property: active.property,\r\n        stops: active.stops\r\n      });\r\n    };\r\n\r\n    const flyTo = (props) => {\r\n      if (props){\r\n        map.flyTo({\r\n          center: [props.longitude, props.latitude],\r\n          duration: 2000,\r\n          essential: true,\r\n          zoom: 5\r\n        });\r\n  \r\n      }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          <div ref={mapContainer} className=\"map-container\" />\r\n          <NavBar flyTo={flyTo} year={year} setYear={setYear} updateActive={updateActive} />\r\n          <Legend active={active} year={year} open={open} />\r\n          {!open && \r\n            <Box sx={{ flexGrow: 1 }}>\r\n              <Card sx={{ maxWidth: 250, position: 'absolute', right: 225, bottom: 0, mb: 5, mr: 5 }}>\r\n                  <CardContent>\r\n                  <MigrationTopChart year={year} mode=\"source\" title=\"Top Migration Sources\"/>\r\n                  </CardContent>\r\n              </Card>\r\n            </Box>\r\n          }\r\n         {!open && \r\n            <Box sx={{ flexGrow: 1 }}>\r\n              <Card sx={{ maxWidth: 250, position: 'absolute', right: 475, bottom: 0, mb: 5, mr: 5 }}>\r\n                  <CardContent>\r\n                  <MigrationTopChart year={year} mode=\"destination\" title=\"Top Migration Destination\"/>\r\n                  </CardContent>\r\n              </Card>\r\n            </Box>\r\n         }\r\n          {open && \r\n            <CountryModal open={open} handleClose={handleClose} country={country}/>\r\n          }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Map;","import React from 'react';\r\nimport Map from './Map';\r\n\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    ArcElement\r\n  } from 'chart.js';\r\n\r\n  ChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    ArcElement\r\n  );\r\n  \r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <Map />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","const colorStops = [\r\n  [-250000, '#b2182b'],\r\n  [-100000, '#ef8a62'],\r\n  [-50000, '#fddbc7'],\r\n  [0, '#f7f7f7'],\r\n  [50000, '#d1e5f0'],\r\n  [100000, '#67a9cf'],\r\n  [250000, '#2166ac'],\r\n]\r\n\r\nconst YearOptions = [\r\n      {\r\n        name: 'Net Migration',\r\n        description: 'Citizens who left the country this year',\r\n        property: '2000',\r\n        stops: colorStops\r\n      },\r\n      {\r\n        name: 'Net Migration',\r\n        description: 'Citizens who left the country this year',\r\n        property: '2001',\r\n        stops: colorStops\r\n      },\r\n      {\r\n        name: 'Net Migration',\r\n        description: 'Citizens who left the country this year',\r\n        property: '2002',\r\n        stops: colorStops\r\n      },\r\n      {\r\n        name: 'Net Migration',\r\n        description: 'Citizens who left the country this year',\r\n        property: '2003',\r\n        stops: colorStops\r\n      },\r\n      {\r\n        name: 'Net Migration',\r\n        description: 'Citizens who left the country this year',\r\n        property: '2004',\r\n        stops: colorStops\r\n      },\r\n      {\r\n        name: 'Net Migration',\r\n        description: 'Citizens who left the country this year',\r\n        property: '2005',\r\n        stops: colorStops\r\n      },\r\n      {\r\n        name: 'Net Migration',\r\n        description: 'Citizens who left the country this year',\r\n        property: '2006',\r\n        stops: colorStops\r\n      },\r\n      {\r\n        name: 'Net Migration',\r\n        description: 'Citizens who left the country this year',\r\n        property: '2007',\r\n        stops: colorStops\r\n      },\r\n      {\r\n        name: 'Net Migration',\r\n        description: 'Citizens who left the country this year',\r\n        property: '2008',\r\n        stops: colorStops\r\n      },\r\n      {\r\n        name: 'Net Migration',\r\n        description: 'Citizens who left the country this year',\r\n        property: '2009',\r\n        stops: colorStops\r\n      },\r\n      {\r\n        name: 'Net Migration',\r\n        description: 'Citizens who left the country this year',\r\n        property: '2010',\r\n        stops: colorStops\r\n      },\r\n      {\r\n        name: 'Net Migration',\r\n        description: 'Citizens who left the country this year',\r\n        property: '2011',\r\n        stops: colorStops\r\n      },\r\n      {\r\n        name: 'Net Migration',\r\n        description: 'Citizens who left the country this year',\r\n        property: '2012',\r\n        stops: colorStops\r\n      },\r\n      {\r\n        name: 'Net Migration',\r\n        description: 'Citizens who left the country this year',\r\n        property: '2013',\r\n        stops: colorStops\r\n      },\r\n      {\r\n        name: 'Net Migration',\r\n        description: 'Citizens who left the country this year',\r\n        property: '2014',\r\n        stops: colorStops\r\n      },\r\n      {\r\n        name: 'Net Migration',\r\n        description: 'Citizens who left the country this year',\r\n        property: '2015',\r\n        stops: colorStops\r\n      },\r\n      {\r\n        name: 'Net Migration',\r\n        description: 'Citizens who left the country this year',\r\n        property: '2016',\r\n        stops: colorStops\r\n      },\r\n      {\r\n        name: 'Net Migration',\r\n        description: 'Citizens who left the country this year',\r\n        property: '2017',\r\n        stops: colorStops\r\n      },\r\n      {\r\n        name: 'Net Migration',\r\n        description: 'Citizens who left the country this year',\r\n        property: '2018',\r\n        stops: colorStops\r\n      },\r\n      {\r\n        name: 'Net Migration',\r\n        description: 'Citizens who left the country this year',\r\n        property: '2019',\r\n        stops: colorStops\r\n      },\r\n      {\r\n        name: 'Net Migration',\r\n        description: 'Citizens who left the country this year',\r\n        property: '2020',\r\n        stops: colorStops\r\n      },\r\n      {\r\n        name: 'Net Migration',\r\n        description: 'Citizens who left the country this year',\r\n        property: '2021',\r\n        stops: colorStops\r\n      }\r\n];\r\n\r\nmodule.exports = {YearOptions};"],"sourceRoot":""}